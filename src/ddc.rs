#![allow(clippy::excessive_precision)]
use num::Complex;

pub use crate::{
    bindings::{self, fcomplex, DDCResources, DDCResources2},
    payload::N_PT_PER_FRAME,
};
use std::os::raw::c_int;

unsafe impl Send for fcomplex {}
unsafe impl Sync for fcomplex {}
pub const M: usize = 8192;

pub fn npt_ddc_per_dump(ndec: usize)->usize{
    N_PT_PER_FRAME * M / ndec
}


pub struct DownConverter(pub DDCResources);

impl DownConverter {
    pub fn new(ndec: usize, fir_coeffs: &[f32]) -> Self {
        let k = fir_coeffs.len() / ndec;
        assert_eq!(ndec * k, fir_coeffs.len());

        let mut res = DDCResources {
            d_indata: std::ptr::null_mut(),
            K: k as i32,
            N: N_PT_PER_FRAME as i32,
            M: M as i32,
            NDEC: ndec as i32,
            d_fir_coeffs: std::ptr::null_mut(),
            d_outdata: std::ptr::null_mut(),
            mixed_data: std::ptr::null_mut(),
            h_indata: std::ptr::null_mut(),
            h_index: 0,
        };
        unsafe {
            crate::bindings::init_ddc_resources(
                (&mut res) as *mut DDCResources,
                N_PT_PER_FRAME as i32,
                M as i32,
                ndec as c_int,
                k as c_int,
                fir_coeffs.as_ptr(),
            );
        }

        Self(res)
    }

    pub fn ddc(&mut self, indata: &[i16], lo_ch: isize) -> bool {
        assert_eq!(indata.len(), N_PT_PER_FRAME);

        let result = unsafe {
            bindings::ddc(
                indata.as_ptr(),
                lo_ch as c_int,
                (&mut self.0) as *mut DDCResources,
            )
        };
        assert!(result >= 0);
        result != 0
    }

    pub fn fetch_output(&mut self, outdata: &mut [Complex<f32>]) {
        assert_eq!(outdata.len(), self.n_out_data());
        unsafe {
            bindings::fetch_output(
                outdata.as_mut_ptr() as *mut fcomplex,
                (&mut self.0) as *mut DDCResources,
            )
        }
    }

    pub fn n_out_data(&self) -> usize {
        unsafe { bindings::calc_output_size((&self.0) as *const DDCResources) as usize }
    }
}

impl Drop for DownConverter {
    fn drop(&mut self) {
        unsafe { crate::bindings::free_ddc_resources((&mut self.0) as *mut DDCResources) };
    }
}

pub fn fir_coeffs_half() -> Vec<f32> {
    vec![
        -0.00011975709287684854,
        -5.358297155071411e-05,
        -1.1690992800869759e-05,
        6.318503319973864e-05,
        0.00014381767759789795,
        0.00019251243803779036,
        0.00017926123825758952,
        0.0001000818332442074,
        -1.6126375534177568e-05,
        -0.00011671308546651544,
        -0.00014909952823524274,
        -9.034462379991167e-05,
        3.719860657268353e-05,
        0.000170566958288551,
        0.00023529932246290294,
        0.00018466772072276056,
        2.9289445280800564e-05,
        -0.00016078909996314534,
        -0.00028663947125544454,
        -0.00027100487575933954,
        -0.00010429046250507815,
        0.00014168801171211316,
        0.0003422025862131671,
        0.0003818929142969262,
        0.00021907577064303474,
        -8.20382056371615e-05,
        -0.0003739779595254185,
        -0.0004966408861465735,
        -0.00036370505587745086,
        -1.8349981315456652e-05,
        0.0003755046269451075,
        0.0006091699582400865,
        0.0005381801198530545,
        0.00016824469265868942,
        -0.00033173749690819534,
        -0.0007042827114502241,
        -0.0007343147949394064,
        -0.0003705287895678264,
        0.0002298187938226951,
        0.0007654814578375737,
        0.0009402684616667222,
        0.0006245660962946229,
        -5.827137266615671e-05,
        -0.0007742445047035162,
        -0.0011398606227698196,
        -0.000925052977893023,
        -0.000192273355532753,
        0.0007104885738672611,
        0.0013117631764071364,
        0.0012604928520933167,
        0.0005264757962187468,
        -0.0005547766071170229,
        -0.00143121429911602,
        -0.0016133256205593033,
        -0.0009437708029966104,
        0.00028941647754240544,
        0.0014702889673182864,
        0.0019595087344616508,
        0.0014367577825835794,
        9.983855847577527e-05,
        -0.0013993654659085353,
        -0.0022685703222038293,
        -0.001990182205938592,
        -0.0006217411439447768,
        0.0011888043302356846,
        0.0025046053219223365,
        0.002580458661425593,
        0.001278464997496623,
        -0.0008103933130272807,
        -0.00262669503357579,
        -0.0031751380329187425,
        -0.00206371235014662,
        0.0002392870616855232,
        0.0025904634230410127,
        0.0037328902106388536,
        0.0029616867558883942,
        0.0005441309657401852,
        -0.0023494031777414204,
        -0.004204153775682432,
        -0.003946589834412276,
        -0.0015534843966052419,
        0.0018556489853696649,
        0.004531058865984813,
        0.00498208785424941,
        0.0027954541141162787,
        -0.0010604266066783173,
        -0.004647564872824069,
        -0.006021033196259746,
        -0.004270033615525379,
        -8.659196186510841e-05,
        0.0044784328013305124,
        0.007005460773925839,
        0.005972042854595251,
        0.001640644673802196,
        -0.003935936679510697,
        -0.00786546884930151,
        -0.00789450226503198,
        -0.003669051692058861,
        0.0029121108511674103,
        0.008516812127230794,
        0.010035760216213548,
        0.006267648757190845,
        -0.0012607753153357016,
        -0.008853463193199294,
        -0.012413388821774368,
        -0.009595983358553363,
        -0.0012437946545409014,
        0.008728187587486178,
        0.015092634373100638,
        0.013958188753522921,
        0.005006523800487536,
        -0.007902061594602107,
        -0.01825774081693717,
        -0.0200187999363573,
        -0.010892875756028547,
        0.0058913344027753094,
        0.022426795160134683,
        0.029510694968041637,
        0.021224826269884898,
        -0.001372348434706864,
        -0.02934264322933621,
        -0.0485474232353165,
        -0.04512094504838804,
        -0.011594716872094268,
        0.04895628136353434,
        0.12271541345547768,
        0.18927057841120407,
        0.22867097726040536,
        0.22867097726040536,
        0.18927057841120407,
        0.12271541345547768,
        0.04895628136353434,
        -0.011594716872094268,
        -0.04512094504838804,
        -0.0485474232353165,
        -0.02934264322933621,
        -0.001372348434706864,
        0.021224826269884898,
        0.029510694968041637,
        0.022426795160134683,
        0.0058913344027753094,
        -0.010892875756028547,
        -0.0200187999363573,
        -0.01825774081693717,
        -0.007902061594602107,
        0.005006523800487536,
        0.013958188753522921,
        0.015092634373100638,
        0.008728187587486178,
        -0.0012437946545409014,
        -0.009595983358553363,
        -0.012413388821774368,
        -0.008853463193199294,
        -0.0012607753153357016,
        0.006267648757190845,
        0.010035760216213548,
        0.008516812127230794,
        0.0029121108511674103,
        -0.003669051692058861,
        -0.00789450226503198,
        -0.00786546884930151,
        -0.003935936679510697,
        0.001640644673802196,
        0.005972042854595251,
        0.007005460773925839,
        0.0044784328013305124,
        -8.659196186510841e-05,
        -0.004270033615525379,
        -0.006021033196259746,
        -0.004647564872824069,
        -0.0010604266066783173,
        0.0027954541141162787,
        0.00498208785424941,
        0.004531058865984813,
        0.0018556489853696649,
        -0.0015534843966052419,
        -0.003946589834412276,
        -0.004204153775682432,
        -0.0023494031777414204,
        0.0005441309657401852,
        0.0029616867558883942,
        0.0037328902106388536,
        0.0025904634230410127,
        0.0002392870616855232,
        -0.00206371235014662,
        -0.0031751380329187425,
        -0.00262669503357579,
        -0.0008103933130272807,
        0.001278464997496623,
        0.002580458661425593,
        0.0025046053219223365,
        0.0011888043302356846,
        -0.0006217411439447768,
        -0.001990182205938592,
        -0.0022685703222038293,
        -0.0013993654659085353,
        9.983855847577527e-05,
        0.0014367577825835794,
        0.0019595087344616508,
        0.0014702889673182864,
        0.00028941647754240544,
        -0.0009437708029966104,
        -0.0016133256205593033,
        -0.00143121429911602,
        -0.0005547766071170229,
        0.0005264757962187468,
        0.0012604928520933167,
        0.0013117631764071364,
        0.0007104885738672611,
        -0.000192273355532753,
        -0.000925052977893023,
        -0.0011398606227698196,
        -0.0007742445047035162,
        -5.827137266615671e-05,
        0.0006245660962946229,
        0.0009402684616667222,
        0.0007654814578375737,
        0.0002298187938226951,
        -0.0003705287895678264,
        -0.0007343147949394064,
        -0.0007042827114502241,
        -0.00033173749690819534,
        0.00016824469265868942,
        0.0005381801198530545,
        0.0006091699582400865,
        0.0003755046269451075,
        -1.8349981315456652e-05,
        -0.00036370505587745086,
        -0.0004966408861465735,
        -0.0003739779595254185,
        -8.20382056371615e-05,
        0.00021907577064303474,
        0.0003818929142969262,
        0.0003422025862131671,
        0.00014168801171211316,
        -0.00010429046250507815,
        -0.00027100487575933954,
        -0.00028663947125544454,
        -0.00016078909996314534,
        2.9289445280800564e-05,
        0.00018466772072276056,
        0.00023529932246290294,
        0.000170566958288551,
        3.719860657268353e-05,
        -9.034462379991167e-05,
        -0.00014909952823524274,
        -0.00011671308546651544,
        -1.6126375534177568e-05,
        0.0001000818332442074,
        0.00017926123825758952,
        0.00019251243803779036,
        0.00014381767759789795,
        6.318503319973864e-05,
        -1.1690992800869759e-05,
        -5.358297155071411e-05,
        -0.00011975709287684854,
    ]
}

pub fn fir_coeffs2() -> Vec<f32> {
    vec![
        1.24919278e-04,
        1.87340062e-04,
        2.54336466e-04,
        3.19419542e-04,
        3.74655087e-04,
        4.11165271e-04,
        4.19813565e-04,
        3.92038171e-04,
        3.20780621e-04,
        2.01440077e-04,
        3.27717133e-05,
        -1.82358899e-04,
        -4.36453212e-04,
        -7.17168929e-04,
        -1.00748549e-03,
        -1.28628744e-03,
        -1.52937838e-03,
        -1.71090455e-03,
        -1.80513157e-03,
        -1.78848233e-03,
        -1.64171198e-03,
        -1.35207001e-03,
        -9.15281892e-04,
        -3.37176770e-04,
        3.65206597e-04,
        1.16318370e-03,
        2.01677387e-03,
        2.87590733e-03,
        3.68250762e-03,
        4.37340718e-03,
        4.88399089e-03,
        5.15240109e-03,
        5.12408244e-03,
        4.75640038e-03,
        4.02303662e-03,
        2.91785302e-03,
        1.45792206e-03,
        -3.14549107e-04,
        -2.33162605e-03,
        -4.50054372e-03,
        -6.70616835e-03,
        -8.81500806e-03,
        -1.06806578e-02,
        -1.21504677e-02,
        -1.30731356e-02,
        -1.33068463e-02,
        -1.27275284e-02,
        -1.12367619e-02,
        -8.76886842e-03,
        -5.29673644e-03,
        -8.35986530e-04,
        4.55284086e-03,
        1.07642930e-02,
        1.76503082e-02,
        2.50247886e-02,
        3.26702858e-02,
        4.03465187e-02,
        4.78003304e-02,
        5.47766012e-02,
        6.10295684e-02,
        6.63339694e-02,
        7.04954233e-02,
        7.33595010e-02,
        7.48189943e-02,
        7.48189943e-02,
        7.33595010e-02,
        7.04954233e-02,
        6.63339694e-02,
        6.10295684e-02,
        5.47766012e-02,
        4.78003304e-02,
        4.03465187e-02,
        3.26702858e-02,
        2.50247886e-02,
        1.76503082e-02,
        1.07642930e-02,
        4.55284086e-03,
        -8.35986530e-04,
        -5.29673644e-03,
        -8.76886842e-03,
        -1.12367619e-02,
        -1.27275284e-02,
        -1.33068463e-02,
        -1.30731356e-02,
        -1.21504677e-02,
        -1.06806578e-02,
        -8.81500806e-03,
        -6.70616835e-03,
        -4.50054372e-03,
        -2.33162605e-03,
        -3.14549107e-04,
        1.45792206e-03,
        2.91785302e-03,
        4.02303662e-03,
        4.75640038e-03,
        5.12408244e-03,
        5.15240109e-03,
        4.88399089e-03,
        4.37340718e-03,
        3.68250762e-03,
        2.87590733e-03,
        2.01677387e-03,
        1.16318370e-03,
        3.65206597e-04,
        -3.37176770e-04,
        -9.15281892e-04,
        -1.35207001e-03,
        -1.64171198e-03,
        -1.78848233e-03,
        -1.80513157e-03,
        -1.71090455e-03,
        -1.52937838e-03,
        -1.28628744e-03,
        -1.00748549e-03,
        -7.17168929e-04,
        -4.36453212e-04,
        -1.82358899e-04,
        3.27717133e-05,
        2.01440077e-04,
        3.20780621e-04,
        3.92038171e-04,
        4.19813565e-04,
        4.11165271e-04,
        3.74655087e-04,
        3.19419542e-04,
        2.54336466e-04,
        1.87340062e-04,
        1.24919278e-04,
    ]
}
